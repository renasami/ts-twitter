{"ast":null,"code":"var _jsxFileName = \"/Users/ren/myjlab/ts-twitter/front/src/components/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport ReactLoading from 'react-loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.get('http://127.0.0.1:5000/test').then(response => console.log(response.data));\naxios.post('http://127.0.0.1:5000/users/?user_id=Fuck').then(response => console.log(response.data));\n\nconst Home = () => {\n  _s();\n\n  const submitTwitterAccount = async () => {\n    if (!userId) {\n      setErr('you must type your user id');\n      return;\n    } else if (userId[0] != '@') {\n      setErr('you must start with @');\n      return;\n    }\n\n    setErr('');\n    console.log(userId);\n    await axios.post(`http://127.0.0.1:5000/users/?user_id=${userId}`).then(response => setErr(response.data.user_id));\n  };\n\n  const [userId, setUserId] = useState('');\n  const [err, setErr] = useState('');\n\n  const getValueId = e => {\n    setUserId(() => e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter Your Twitter account id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId,\n        onChange: getValueId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTwitterAccount,\n        className: \"good\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactLoading, {\n      type: \"SpinningBubbles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"rQrAkA+iQjYKl44gndPInZxVYB8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ren/myjlab/ts-twitter/front/src/components/Home/index.tsx"],"names":["React","useState","axios","ReactLoading","get","then","response","console","log","data","post","Home","submitTwitterAccount","userId","setErr","user_id","setUserId","err","getValueId","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,aAAP;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;AAIAD,KAAK,CAACE,GAAN,CAAU,4BAAV,EAAwCC,IAAxC,CAA6CC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAAzD;AACAP,KAAK,CAACQ,IAAN,CAAW,2CAAX,EAAwDL,IAAxD,CAA6DC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAAzE;;AAEA,MAAME,IAAe,GAAG,MAAM;AAAA;;AAE1B,QAAMC,oBAAoB,GAAG,YAAY;AACrC,QAAG,CAACC,MAAJ,EAAW;AACPC,MAAAA,MAAM,CAAC,4BAAD,CAAN;AACA;AACH,KAHD,MAGM,IAAID,MAAM,CAAC,CAAD,CAAN,IAAa,GAAjB,EAAqB;AACvBC,MAAAA,MAAM,CAAC,uBAAD,CAAN;AACA;AACH;;AACDA,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACA,UAAMX,KAAK,CAACQ,IAAN,CAAY,wCAAuCG,MAAO,EAA1D,EACLR,IADK,CACAC,QAAQ,IAAIQ,MAAM,CAACR,QAAQ,CAACG,IAAT,CAAcM,OAAf,CADlB,CAAN;AAGH,GAbD;;AAiBA,QAAM,CAACF,MAAD,EAASG,SAAT,IAAuBf,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACgB,GAAD,EAAMH,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;;AACA,QAAMiB,UAAU,GAAIC,CAAD,IAAwC;AACvDH,IAAAA,SAAS,CAAC,MAAMG,CAAC,CAACC,MAAF,CAASC,KAAhB,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,4BAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEJ,MAA1B;AAAkC,QAAA,QAAQ,EAAEK;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAEN,oBAAjB;AAAuC,QAAA,SAAS,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADJ;AAcH,CAvCD;;GAAMD,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { FC, useState } from 'react';\nimport './style.css';\nimport Button from '../atoms/Button'\nimport TweetsList from '../TweetsList';\nimport axios from 'axios'\nimport ReactLoading from 'react-loading'\ntype Props = {\n    \n}\naxios.get('http://127.0.0.1:5000/test').then(response => console.log(response.data))\naxios.post('http://127.0.0.1:5000/users/?user_id=Fuck').then(response => console.log(response.data))\n\nconst Home:  React.FC = () => {\n\n    const submitTwitterAccount = async () => {\n        if(!userId){\n            setErr('you must type your user id');\n            return\n        }else if (userId[0] != '@'){\n            setErr('you must start with @');\n            return\n        }\n        setErr('')\n        console.log(userId);\n        await axios.post(`http://127.0.0.1:5000/users/?user_id=${userId}`)\n        .then(response => setErr(response.data.user_id))\n        \n    }\n\n \n\n    const [userId, setUserId]  = useState('');\n    const [err ,setErr] = useState('')\n    const getValueId = (e: { target: { value: string; }; }) => {\n        setUserId(() => e.target.value)\n    }\n\n    return (\n        <>\n            {/* <div className=\"tweets\">\n                    <TweetsList />\n            </div> */}\n            <div className=\"home\">\n                <h1>Enter Your Twitter account id</h1>\n                <p>{ err }</p>\n                <input type=\"text\" value={userId} onChange={getValueId} />\n                <button onClick={submitTwitterAccount} className=\"good\">submit</button>\n            </div>\n            <ReactLoading type=\"SpinningBubbles\"/>\n        </>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}