{"ast":null,"code":"var _jsxFileName = \"/Users/ren/myjlab/ts-twitter/front/src/components/Result/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport store from '../../store';\nimport TweetsList from '../TweetsList';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = () => {\n  _s();\n\n  let id = store.getState().userId;\n  const [num, setNum] = useState();\n  const [all, setAll] = useState();\n  const [per, setPer] = useState()(async () => {\n    await axios.post(`http://127.0.0.1:5000/all/?userId=${id}`).then(response => setAll(response.data));\n    await axios.post(`http://127.0.0.1:5000/test/?userId=${id}`).then(response => setNum(response.data));\n    setPer(num / all * 100);\n  })();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fas\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child\",\n        children: /*#__PURE__*/_jsxDEV(TweetsList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fas\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"child\",\n        children: [\"There are \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: num\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 49\n        }, this), \"  tweets that contain bad words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fas\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"child\",\n        children: [per, \"% tweets have bad words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Result, \"hH10VljOoXmOxEORhdPlyY9waa8=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/ren/myjlab/ts-twitter/front/src/components/Result/index.tsx"],"names":["React","useState","axios","store","TweetsList","Result","id","getState","userId","num","setNum","all","setAll","per","setPer","post","then","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,aAAP;;;AAGA,MAAMC,MAAiB,GAAG,MAAM;AAAA;;AAC5B,MAAIC,EAAE,GAAGH,KAAK,CAACI,QAAN,GAAiBC,MAA1B;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,EAA9B;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,EAA9B;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,GAC7B,YAAW;AACR,UAAMC,KAAK,CAACa,IAAN,CAAY,qCAAoCT,EAAG,EAAnD,EAAsDU,IAAtD,CAA2DC,QAAQ,IAAIL,MAAM,CAACK,QAAQ,CAACC,IAAV,CAA7E,CAAN;AACA,UAAMhB,KAAK,CAACa,IAAN,CAAY,sCAAqCT,EAAG,EAApD,EACDU,IADC,CACIC,QAAQ,IAAIP,MAAM,CAACO,QAAQ,CAACC,IAAV,CADtB,CAAN;AAEIJ,IAAAA,MAAM,CAACL,GAAG,GAAEE,GAAL,GAAW,GAAZ,CAAN;AACL,GAN2B,CAAR,EAAtB;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,8CAAgC;AAAA,oBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eASI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,mBAAuBI,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1BD;;GAAMR,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport store from '../../store';\nimport TweetsList from '../TweetsList';\nimport './style.css';\n\n\nconst Result : React.FC = () => {\n    let id = store.getState().userId\n    const [num, setNum] = useState<number>()\n    const [all, setAll] = useState<number>()\n    const [per, setPer] = useState<number>()\n    (async() => {\n        await axios.post(`http://127.0.0.1:5000/all/?userId=${id}`).then(response => setAll(response.data))\n        await axios.post(`http://127.0.0.1:5000/test/?userId=${id}`)\n            .then(response => setNum(response.data))\n            setPer(num!/all! *100)\n      })();\n    return (\n        <div className=\"results\">  \n            <div className=\"fas\">\n                <div className=\"child\">\n                <TweetsList />\n                </div>\n            </div>\n            <div className=\"fas\">\n                <h2 className=\"child\">There are <b>{num}</b>  tweets that contain bad words</h2>\n            </div>\n            <div className=\"fas\">\n                <h3 className=\"child\">{per}% tweets have bad words</h3> \n            </div>\n        </div>\n    )\n}\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}