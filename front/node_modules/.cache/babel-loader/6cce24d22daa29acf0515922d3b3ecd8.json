{"ast":null,"code":"var _jsxFileName = \"/Users/ren/myjlab/ts-twitter/front/src/components/Result/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Result = userId => {\n  _s();\n\n  const [num, setNum] = useState();\n  console.log(userId, 'isis');\n  axios.get('http://127.0.0.1:5000/test').then(response => setNum(response.data));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"There are \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this), \"  tweets that contain bad words\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n\n_s(Result, \"KVpZLO50MCB5Ir300+CdBIlhgfk=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/ren/myjlab/ts-twitter/front/src/components/Result/index.tsx"],"names":["React","useState","axios","Result","userId","num","setNum","console","log","get","then","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAMA,MAAMC,MAAwB,GAAIC,MAAD,IAAY;AAAA;;AACzC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,EAA9B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAmB,MAAnB;AACAF,EAAAA,KAAK,CAACO,GAAN,CAAU,4BAAV,EACKC,IADL,CACUC,QAAQ,IAAIL,MAAM,CAACK,QAAQ,CAACC,IAAV,CAD5B;AAGA,sBACI;AAAA,2BACC;AAAA,4CAAc;AAAA,kBAAIP;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADJ;AAKH,CAXD;;GAAMF,M;;KAAAA,M;AAaN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\ntype Props = {\n    userId: string;\n}\n\nconst Result : React.FC<Props> = (userId) => {\n    const [num, setNum] = useState<number>()\n    console.log(userId,'isis')\n    axios.get('http://127.0.0.1:5000/test')\n        .then(response => setNum(response.data))\n\n    return (\n        <>\n         <h2>There are <b>{num}</b>  tweets that contain bad words</h2>\n        </>\n    )\n}\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}