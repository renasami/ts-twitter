{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ren/myjlab/ts-twitter/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/ren/myjlab/ts-twitter/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/ren/myjlab/ts-twitter/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ren/myjlab/ts-twitter/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import axios from'axios';import store from'../../store';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TweetsList=function TweetsList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tweetsList=_useState2[0],setTweetsList=_useState2[1];var tweets=[];var listItems=[];var get_tweets=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var id;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=store.getState().userId;_context.next=3;return axios.post(\"http://127.0.0.1:5000/get_tweets/?userId=\".concat(id)).then(function(response){response.data.forEach(function(tweet){return tweets.push(tweet);});});case 3:console.log(tweets);listItems=tweets.map(function(tw,index){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"li\",{className:\"list\",children:tw},index)});});setTweetsList(_toConsumableArray(listItems));console.log(tweetsList);case 7:case\"end\":return _context.stop();}}},_callee);}));return function get_tweets(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:get_tweets,children:\"show bad tweet\"}),/*#__PURE__*/_jsx(\"ul\",{children:tweetsList})]});};export default TweetsList;","map":{"version":3,"sources":["/Users/ren/myjlab/ts-twitter/front/src/components/TweetsList/index.tsx"],"names":["React","useState","axios","store","TweetsList","tweetsList","setTweetsList","tweets","listItems","get_tweets","id","getState","userId","post","then","response","data","forEach","tweet","push","console","log","map","tw","index"],"mappings":"ymBAAA,MAAOA,CAAAA,KAAP,EAAoBC,QAApB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,C,6IAEA,GAAMC,CAAAA,UAAc,CAAG,QAAjBA,CAAAA,UAAiB,EAAM,CACzB,cAAoCH,QAAQ,CAAQ,EAAR,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eACA,GAAIC,CAAAA,MAAgB,CAAG,EAAvB,CACA,GAAIC,CAAAA,SAAgB,CAAG,EAAvB,CAEA,GAAMC,CAAAA,UAAU,0FAAG,0IACXC,EADW,CACNP,KAAK,CAACQ,QAAN,GAAiBC,MADX,uBAETV,CAAAA,KAAK,CAACW,IAAN,oDAAuDH,EAAvD,GACDI,IADC,CACI,SAAAC,QAAQ,CAAI,CAAEA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,SAACC,KAAD,QAAmBX,CAAAA,MAAM,CAACY,IAAP,CAAYD,KAAZ,CAAnB,EAAtB,EAA8D,CADhF,CAFS,QAIfE,OAAO,CAACC,GAAR,CAAYd,MAAZ,EACAC,SAAS,CAAGD,MAAM,CAACe,GAAP,CAAW,SAACC,EAAD,CAAKC,KAAL,CAAc,CACjC,mBACI,sCACI,WAAgB,SAAS,CAAC,MAA1B,UACKD,EADL,EAASC,KAAT,CADJ,EADJ,CAME,CAPM,CAAZ,CASAlB,aAAa,oBAAKE,SAAL,EAAb,CACAY,OAAO,CAACC,GAAR,CAAYhB,UAAZ,EAfe,sDAAH,kBAAVI,CAAAA,UAAU,0CAAhB,CAkBA,mBACI,wCACI,eAAQ,OAAO,CAAEA,UAAjB,4BADJ,cAGQ,oBACKJ,UADL,EAHR,GADJ,CASH,CAhCD,CAkCA,cAAeD,CAAAA,UAAf","sourcesContent":["import React, { FC, useState, VFC } from 'react';\nimport axios from 'axios';\nimport store from '../../store';\n\nconst TweetsList: FC = () => {\n    const [tweetsList, setTweetsList] = useState<any[]>([])\n    let tweets: string[] = []\n    let listItems: any[] = []\n    \n    const get_tweets = async () =>{\n        let id = store.getState().userId\n        await axios.post(`http://127.0.0.1:5000/get_tweets/?userId=${id}`)\n            .then(response => { response.data.forEach((tweet: string) => tweets.push(tweet)) })\n        console.log(tweets)\n        listItems = tweets.map((tw, index) =>{\n            return(\n                <>\n                    <li key={index} className=\"list\">\n                        {tw}\n                    </li>\n                </>\n            )}\n        )\n        setTweetsList([...listItems])\n        console.log(tweetsList)\n    }\n\n    return (\n        <>\n            <button onClick={get_tweets}>show bad tweet</button>\n         \n                <ul>\n                    {tweetsList}\n                </ul>\n        </>\n    )\n}\n\nexport default TweetsList\n\n"]},"metadata":{},"sourceType":"module"}