{"ast":null,"code":"var _jsxFileName = \"/Users/ren/myjlab/ts-twitter/front/src/components/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.get('http://127.0.0.1:5000/').then(response => console.log(response.data));\naxios.post('http://localhost:5000/users/?user_id=Fuck').then(response => console.log(response.data));\n\nconst Home = props => {\n  _s();\n\n  const submitTwitterAccount = () => {\n    if (!userId) {\n      setErr('you must type your user id');\n      return;\n    } else if (userId[0] != '@') {\n      setErr('you must start with @');\n      return;\n    }\n\n    setErr('');\n    console.log(userId);\n    axios.post(`http://localhost:5000/users/?user_id=${userId}`).then(response => setErr(response.data.user_id));\n    get_tweets();\n  };\n\n  const get_tweets = () => {\n    axios.post(`http://localhost:5000/get_tweets/`);\n  };\n\n  const [userId, setUserId] = useState('');\n  const [err, setErr] = useState('');\n\n  const getValueId = e => {\n    setUserId(() => e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter Your Twitter account id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userId,\n      onChange: getValueId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitTwitterAccount,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"rQrAkA+iQjYKl44gndPInZxVYB8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ren/myjlab/ts-twitter/front/src/components/Home/index.tsx"],"names":["React","useState","axios","get","then","response","console","log","data","post","Home","props","submitTwitterAccount","userId","setErr","user_id","get_tweets","setUserId","err","getValueId","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,aAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAIAA,KAAK,CAACC,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAAyCC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAArD;AACAN,KAAK,CAACO,IAAN,CAAW,2CAAX,EAAwDL,IAAxD,CAA6DC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAAzE;;AAEA,MAAME,IAAsB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAG,CAACC,MAAJ,EAAW;AACPC,MAAAA,MAAM,CAAC,4BAAD,CAAN;AACA;AACH,KAHD,MAGM,IAAID,MAAM,CAAC,CAAD,CAAN,IAAa,GAAjB,EAAqB;AACvBC,MAAAA,MAAM,CAAC,uBAAD,CAAN;AACA;AACH;;AACDA,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACAX,IAAAA,KAAK,CAACO,IAAN,CAAY,wCAAuCI,MAAO,EAA1D,EACCT,IADD,CACMC,QAAQ,IAAIS,MAAM,CAACT,QAAQ,CAACG,IAAT,CAAcO,OAAf,CADxB;AAEAC,IAAAA,UAAU;AACb,GAbD;;AAeA,QAAMA,UAAU,GAAG,MAAM;AACrBd,IAAAA,KAAK,CAACO,IAAN,CAAY,mCAAZ;AACH,GAFD;;AAIA,QAAM,CAACI,MAAD,EAASI,SAAT,IAAuBhB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACiB,GAAD,EAAMJ,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;;AACA,QAAMkB,UAAU,GAAIC,CAAD,IAAwC;AACvDH,IAAAA,SAAS,CAAC,MAAMG,CAAC,CAACC,MAAF,CAASC,KAAhB,CAAT;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEL,MAA1B;AAAkC,MAAA,QAAQ,EAAEM;AAA5C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEP,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlCD;;GAAMF,I;;KAAAA,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React, { FC, useState } from 'react';\nimport './style.css';\nimport Button from '../atoms/Button'\nimport axios from 'axios'\ntype Props = {\n    \n}\naxios.get('http://127.0.0.1:5000/').then(response => console.log(response.data))\naxios.post('http://localhost:5000/users/?user_id=Fuck').then(response => console.log(response.data))\n\nconst Home:  React.FC<Props> = (props) => {\n    const submitTwitterAccount = () => {\n        if(!userId){\n            setErr('you must type your user id');\n            return\n        }else if (userId[0] != '@'){\n            setErr('you must start with @');\n            return\n        }\n        setErr('')\n        console.log(userId);\n        axios.post(`http://localhost:5000/users/?user_id=${userId}`)\n        .then(response => setErr(response.data.user_id))\n        get_tweets()\n    }\n\n    const get_tweets = () => {\n        axios.post(`http://localhost:5000/get_tweets/`)\n    }\n\n    const [userId, setUserId]  = useState('');\n    const [err ,setErr] = useState('')\n    const getValueId = (e: { target: { value: string; }; }) => {\n        setUserId(() => e.target.value)\n    }\n\n    return (\n        <div className=\"home\">\n            <h1>Enter Your Twitter account id</h1>\n            <p>{ err }</p>\n            <input type=\"text\" value={userId} onChange={getValueId} />\n            <button onClick={submitTwitterAccount}>submit</button>\n        </div>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}