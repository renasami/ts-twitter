{"ast":null,"code":"var _jsxFileName = \"/Users/ren/myjlab/ts-twitter/front/src/components/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.get('http://127.0.0.1:5000/').then(response => console.log(response.data));\naxios.post('http://localhost:5000/users/?user_id=Fuck').then(response => console.log(response.data));\n\nconst Home = props => {\n  _s();\n\n  const [tweetsList, setTweetsList] = useState('');\n\n  const submitTwitterAccount = async () => {\n    if (!userId) {\n      setErr('you must type your user id');\n      return;\n    } else if (userId[0] != '@') {\n      setErr('you must start with @');\n      return;\n    }\n\n    setErr('');\n    console.log(userId);\n    await axios.post(`http://localhost:5000/users/?user_id=${userId}`).then(response => setErr(response.data.user_id));\n  };\n\n  let tweets = [];\n\n  const get_tweets = () => {\n    axios.post(`http://localhost:5000/get_tweets/?user_id=${userId}`).then(response => {\n      tweets.push(response.data);\n    });\n    const listItems = tweets.map(tw => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: tw\n    }, tw.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this));\n  };\n\n  const [userId, setUserId] = useState('');\n  const [err, setErr] = useState('');\n\n  const getValueId = e => {\n    setUserId(() => e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweets\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter Your Twitter account id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId,\n        onChange: getValueId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTwitterAccount,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: get_tweets,\n        children: \"get_tweets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"356tiUeD4bRjK4QCZCeK6TuCWhU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ren/myjlab/ts-twitter/front/src/components/Home/index.tsx"],"names":["React","useState","axios","get","then","response","console","log","data","post","Home","props","tweetsList","setTweetsList","submitTwitterAccount","userId","setErr","user_id","tweets","get_tweets","push","listItems","map","tw","toString","setUserId","err","getValueId","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,aAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIAA,KAAK,CAACC,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAAyCC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAArD;AACAN,KAAK,CAACO,IAAN,CAAW,2CAAX,EAAwDL,IAAxD,CAA6DC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAAzE;;AAEA,MAAME,IAAsB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMa,oBAAoB,GAAG,YAAY;AACrC,QAAG,CAACC,MAAJ,EAAW;AACPC,MAAAA,MAAM,CAAC,4BAAD,CAAN;AACA;AACH,KAHD,MAGM,IAAID,MAAM,CAAC,CAAD,CAAN,IAAa,GAAjB,EAAqB;AACvBC,MAAAA,MAAM,CAAC,uBAAD,CAAN;AACA;AACH;;AACDA,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACA,UAAMb,KAAK,CAACO,IAAN,CAAY,wCAAuCM,MAAO,EAA1D,EACLX,IADK,CACAC,QAAQ,IAAIW,MAAM,CAACX,QAAQ,CAACG,IAAT,CAAcS,OAAf,CADlB,CAAN;AAGH,GAbD;;AAeA,MAAIC,MAAgB,GAAG,EAAvB;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrBjB,IAAAA,KAAK,CAACO,IAAN,CAAY,6CAA4CM,MAAO,EAA/D,EACCX,IADD,CACMC,QAAQ,IAAI;AAACa,MAAAA,MAAM,CAACE,IAAP,CAAYf,QAAQ,CAACG,IAArB;AAA2B,KAD9C;AAEA,UAAMa,SAAS,GAAGH,MAAM,CAACI,GAAP,CAAYC,EAAD,iBAC7B;AAAA,gBACKA;AADL,OAASA,EAAE,CAACC,QAAH,EAAT;AAAA;AAAA;AAAA;AAAA,YADkB,CAAlB;AAMH,GATD;;AAWA,QAAM,CAACT,MAAD,EAASU,SAAT,IAAuBxB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACyB,GAAD,EAAMV,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;;AACA,QAAM0B,UAAU,GAAIC,CAAD,IAAwC;AACvDH,IAAAA,SAAS,CAAC,MAAMG,CAAC,CAACC,MAAF,CAASC,KAAhB,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACQ;AAAA,kBACKT;AADL;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEX,MAA1B;AAAkC,QAAA,QAAQ,EAAEY;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAEb,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAgBH,CApDD;;GAAMT,I;;KAAAA,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React, { FC, useState } from 'react';\nimport './style.css';\nimport Button from '../atoms/Button'\nimport axios from 'axios'\ntype Props = {\n    \n}\naxios.get('http://127.0.0.1:5000/').then(response => console.log(response.data))\naxios.post('http://localhost:5000/users/?user_id=Fuck').then(response => console.log(response.data))\n\nconst Home:  React.FC<Props> = (props) => {\n    const [tweetsList, setTweetsList] = useState('')\n\n    const submitTwitterAccount = async () => {\n        if(!userId){\n            setErr('you must type your user id');\n            return\n        }else if (userId[0] != '@'){\n            setErr('you must start with @');\n            return\n        }\n        setErr('')\n        console.log(userId);\n        await axios.post(`http://localhost:5000/users/?user_id=${userId}`)\n        .then(response => setErr(response.data.user_id))\n        \n    }\n\n    let tweets: string[] = []\n    const get_tweets = () => {\n        axios.post(`http://localhost:5000/get_tweets/?user_id=${userId}`)\n        .then(response => {tweets.push(response.data)})\n        const listItems = tweets.map((tw) =>\n        <li key={tw.toString()}>\n            {tw}\n        </li>\n        )\n\n    }\n\n    const [userId, setUserId]  = useState('');\n    const [err ,setErr] = useState('')\n    const getValueId = (e: { target: { value: string; }; }) => {\n        setUserId(() => e.target.value)\n    }\n\n    return (\n        <>\n            <div className=\"tweets\">\n                    <ul>\n                        {listItems}\n                    </ul>\n            </div>\n            <div className=\"home\">\n                <h1>Enter Your Twitter account id</h1>\n                <p>{ err }</p>\n                <input type=\"text\" value={userId} onChange={getValueId} />\n                <button onClick={submitTwitterAccount}>submit</button>\n                <button onClick={get_tweets}>get_tweets</button>\n            </div>\n        </>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}